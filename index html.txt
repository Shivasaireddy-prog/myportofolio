<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Pizza Order Builder ‚Äì Builder Pattern</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body {
      background: url('https://images.unsplash.com/photo-1601924572230-6f42a44d9e49?auto=format&fit=crop&w=1600&q=80') no-repeat center center fixed;
      background-size: cover;
      position: relative;
    }
    body::before {
      content: "";
      position: absolute;
      inset: 0;
      background: rgba(255,255,255,0.85); /* overlay for readability */
      z-index: -1;
    }
    pre { white-space: pre-wrap; }
  </style>
</head>
<body class="text-slate-900">
  <div class="max-w-4xl mx-auto p-6">
    <h1 class="text-3xl font-bold mb-4">üçï Pizza Order ‚Äì Builder Pattern</h1>
    <p class="mb-4 text-sm text-slate-700">Step-by-step construction of a customized Pizza order.</p>

    <!-- Form -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
      <div class="bg-white rounded-2xl shadow p-5">
        <h2 class="font-semibold mb-3">Build Your Pizza</h2>
        <form id="pizzaForm" class="space-y-3">
          <!-- Size -->
          <label class="block text-sm">Size
            <select id="size" class="mt-1 w-full border rounded-lg p-2">
              <option value="Small">Small</option>
              <option value="Medium" selected>Medium</option>
              <option value="Large">Large</option>
            </select>
          </label>

          <!-- Crust -->
          <label class="block text-sm">Crust
            <select id="crust" class="mt-1 w-full border rounded-lg p-2">
              <option value="Thin">Thin</option>
              <option value="Regular" selected>Regular</option>
              <option value="Cheese Burst">Cheese Burst</option>
            </select>
          </label>

          <!-- Toppings -->
          <fieldset class="text-sm">
            <legend class="font-semibold mb-1">Toppings</legend>
            <div class="grid grid-cols-2 gap-2">
              <label><input type="checkbox" class="topping" value="Onion"> Onion</label>
              <label><input type="checkbox" class="topping" value="Tomato"> Tomato</label>
              <label><input type="checkbox" class="topping" value="Capsicum"> Capsicum</label>
              <label><input type="checkbox" class="topping" value="Mushroom"> Mushroom</label>
              <label><input type="checkbox" class="topping" value="Paneer"> Paneer</label>
              <label><input type="checkbox" class="topping" value="Corn"> Corn</label>
            </div>
          </fieldset>

          <!-- Add-ons -->
          <fieldset class="text-sm">
            <legend class="font-semibold mb-1">Add-ons</legend>
            <label><input type="checkbox" id="extraCheese"> Extra Cheese</label><br>
            <label><input type="checkbox" id="coldDrink"> Cold Drink</label>
          </fieldset>

          <!-- Delivery -->
          <fieldset class="text-sm">
            <legend class="font-semibold mb-1">Delivery Preference</legend>
            <label><input type="radio" name="delivery" value="Takeaway" checked> Takeaway</label><br>
            <label><input type="radio" name="delivery" value="Home Delivery"> Home Delivery</label>
          </fieldset>

          <button type="button" id="buildBtn" class="mt-3 px-4 py-2 rounded-xl bg-red-600 text-white">Build Pizza</button>
          <button type="reset" class="mt-3 px-4 py-2 rounded-xl border">Reset</button>
        </form>
      </div>

      <!-- Result -->
      <div class="bg-white rounded-2xl shadow p-5">
        <h2 class="font-semibold mb-3">Final Pizza Object</h2>
        <pre id="output" class="bg-slate-900 text-white p-3 rounded-xl text-sm min-h-[200px]"></pre>
      </div>
    </div>
  </div>

  <script>
    // Product: Pizza
    class Pizza {
      constructor(builder) {
        this.size = builder.size;
        this.crust = builder.crust;
        this.toppings = builder.toppings;
        this.extraCheese = builder.extraCheese;
        this.coldDrink = builder.coldDrink;
        this.delivery = builder.delivery;
        Object.freeze(this);
      }
    }

    // Builder
    class PizzaBuilder {
      constructor(size, crust) {
        this.size = size;
        this.crust = crust;
        this.toppings = [];
        this.extraCheese = false;
        this.coldDrink = false;
        this.delivery = "Takeaway";
      }
      addTopping(t) { this.toppings.push(t); return this; }
      setExtraCheese(f=true) { this.extraCheese = f; return this; }
      setColdDrink(f=true) { this.coldDrink = f; return this; }
      setDelivery(type) { this.delivery = type; return this; }
      build() { return new Pizza(this); }
    }

    // Form handler
    document.getElementById("buildBtn").addEventListener("click", () => {
      const size = document.getElementById("size").value;
      const crust = document.getElementById("crust").value;
      const toppings = [...document.querySelectorAll(".topping:checked")].map(t => t.value);
      const extraCheese = document.getElementById("extraCheese").checked;
      const coldDrink = document.getElementById("coldDrink").checked;
      const delivery = document.querySelector("input[name='delivery']:checked").value;

      const builder = new PizzaBuilder(size, crust);
      toppings.forEach(t => builder.addTopping(t));
      if (extraCheese) builder.setExtraCheese();
      if (coldDrink) builder.setColdDrink();
      builder.setDelivery(delivery);

      const pizza = builder.build();
      document.getElementById("output").textContent = JSON.stringify(pizza, null, 2);
    });
  </script>
</body>
</html>